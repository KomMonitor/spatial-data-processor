openapi: 3.0.3
info:
  title: KomMonitor Spatial Data Processor API
  description: |-
    API zur Verarbeitung von räumlichen Daten aus dem KomMonitor-Ökosystem.
  contact:
    email: j.speckamp@52north.org
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1

servers:
  - url: http://localhost:8090/

tags:
  - name: processes
    description: Processes that can be executed by this processor
  - name: jobs
    description: Jobs that are being processed

paths:
  /processes:
    get:
      tags:
        - processes
      description: Returns a list of all available Processes
      summary: Returns a list of all available Processes
      operationId: getAllProcessDescriptions
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessOverviewType'
        '401':
          description: unauthorized
      security:
        - kommonitor_auth:
            - access:spatial-data-processor

  /jobs:
    get:
      tags:
        - jobs
      description: Returns a list of all currently queued jobs
      summary: Returns a list of all currently queued jobs
      operationId: getAllJobs
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobOverviewType'
        '401':
          description: unauthorized
      security:
        - kommonitor_auth:
            - access:spatial-data-processor

    post:
      tags:
        - jobs
      summary: Submits a processing Job for execution
      description: Submits a processing Job for execution
      operationId: enqueueJob
      requestBody:
        description: Definition of Job to be executed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessType'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
                format: uuid
                description: UUID of the Job created
        '401':
          description: unauthorized
        '405':
          description: Invalid input
      security:
        - kommonitor_auth:
            - access:spatial-data-processor

  /jobs/{jobId}:
    get:
      tags:
        - jobs
      summary: Gets the current status of a job
      description: Gets the current status of a job
      operationId: getJob
      parameters:
        - in: path
          name: jobId
          required: true
          description: UUID of the job
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOverviewType'
        '401':
          description: unauthorized
        '404':
          description: Job not found
      security:
        - kommonitor_auth:
            - access:spatial-data-processor

  /jobs/{jobId}/result:
    get:
      tags:
        - jobs
      summary: Gets the result of a job
      description: Gets the result of a job
      operationId: getJobResult
      parameters:
        - in: path
          name: jobId
          required: true
          description: UUID of the job
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResultType'
        '401':
          description: unauthorized
        '404':
          description: Job not found
      security:
        - kommonitor_auth:
            - access:spatial-data-processor

components:
  schemas:
    ProcessOverviewType:
      description: Description of a Process that can be executed by the processor
      type: object
      required:
        - id
        - name
        - description
      properties:
        id:
          $ref: '#/components/schemas/uuid'
        name:
          type: string
        description:
          type: string

    ProcessType:
      description: POST type for a new job to be executed by the processor
      type: object
      discriminator:
        propertyName: name
        mapping:
          isochrone-prune: '#/components/schemas/IsochronePruneProcessType'
          test: '#/components/schemas/TestProcessType'
      oneOf:
        - $ref: "#/components/schemas/IsochronePruneProcessType"
        - $ref: "#/components/schemas/TestProcessType"

    IsochronePruneProcessType:
      description: Process that calculates overlap of spatial-units with isochrones
      type: object
      required:
          - name
          - isochron
          - spatialUnit
          - indicator
          - configuration
      properties:
        name:
          type: string
          default: "isochrone-prune"
        isochron:
          $ref: "#/components/schemas/FeatureCollectionType"
        spatialUnit:
          #$ref: "../data-management/kommonitor_dataAccessAPI.yaml/#/definitions/SpatialUnitOverviewType"
          type: string
          format: uuid
        indicator:
          #$ref: "../data-management/kommonitor_dataAccessAPI.yaml/#/definitions/IndicatorOverviewType"
          type: array
          items:
            type: string
            format: uuid
        date:
          type: string
          format: date
        weighting:
          type: string
          description:
            "Method to use for weighting intersections of spatial units and isochrones.
            simple: No weighting will be applied, which means that intersection proportions are returned as is. 
            residential_areas: Residential areas are additionally considered to calculate an intersection proportion."
          enum: [ simple, residential_areas ]
        configuration:
          type: object
          #TODO: expand on this
          description: Additional configuration properties for this process

    TestProcessType:
      description: Process for testing the API.
      type: object
      required:
          - name
          - test
      properties:
        name:
          type: string
          default: "test"
        test:
          type: string

    FeatureCollectionType:
      description: GeoJSON FeatureCollection
      type: object
      #TODO: expand with actual schema

    JobOverviewType:
      description: Description of a Job
      type: object
      required:
        - id
        - process
        - timestamp
        - status
      properties:
        id:
          $ref: '#/components/schemas/uuid'
        process:
          type: string
        timestamp:
          type: string
          format: date-time
        status:
          type: string
          enum: [ queued, running, finished, failed ]

    JobResultType:
      type: object
      required:
            - id
            - result
      properties:
        id:
          $ref: '#/components/schemas/uuid'
        result:
          type: object
          description: |
            The result is a JSON object whose schema depends on the underlying process. Each process has its own result
            schema.
            
    IsochronePruneProcessResultType:
      type: object
      required:
        - indicatorId
      properties:
        indicatorId:
          type: string
          format: uuid
        overallCoverage:
          type: array
          items:
            $ref: '#/components/schemas/OverallCoverageType'
        poiCoverage:
          type: array
          items:
            $ref: '#/components/schemas/PoiCoverageType'

    PoiCoverageType:
      type: object
      required:
        - poiFeatureId
      properties:
        poiFeatureId:
          type: string
        overallCoverage:
          type: array
          items:
            $ref: '#/components/schemas/IndicatorCoverageValueType'
        spatialUnitCoverage:
          type: array
          items:
            $ref: '#/components/schemas/SpatialUnitCoverageType'

    SpatialUnitCoverageType:
      type: object
      required:
        - spatialUnitFeatureId
      properties:
        spatialUnitFeatureId:
          type: string
        coverage:
          type: array
          items:
            $ref: '#/components/schemas/IndicatorCoverageValueType'

    OverallCoverageType:
      type: object
      required:
        - range
      properties:
        range:
          type: number
          format: float
        coverage:
          type: array
          items:
            $ref: '#/components/schemas/IndicatorCoverageValueType'

    IndicatorCoverageValueType:
      type: object
      properties:
        date:
          type: string
          format: date
        absoluteCoverage:
          type: number
          format: float
        relativeCoverage:
          type: number
          format: float

    uuid:
      type: string
      format: uuid
      description: Unique ID

  securitySchemes:
    kommonitor_auth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: http://keycloak:8080/auth
          tokenUrl: http://keycloak:8080/auth/realms/kommonitor/protocol/openid-connect/token
          scopes: {}

security:
  - oAuthNoScopes: []
